# keycloak.yml
---
apiVersion: v1
kind: Namespace
metadata:
  creationTimestamp: null
  name: keycloak
spec: {}
status: {}
---
apiVersion: v1
kind: Service
metadata:
  name: keycloak
  namespace: keycloak
  labels:
    app: keycloak
spec:
  ports:
    - name: http
      port: 8080
      targetPort: 8080
  selector:
    app: keycloak
  type: NodePort
---
apiVersion: v1
data:
  keycloak.conf: |
    # Basic settings for running in production. Change accordingly before deploying the server.
    # Database
    db=postgres
    db-username=postgres           # TODO fix permission to run as keycloak
    db-password=$POSTGRES_PASSWORD # TODO fix permission to run as keycloak
    db-url-host=postgres-cluster.default.svc.cluster.local
    # db-url=jdbc:postgresql://postgres-cluster.default.svc.cluster.local/keycloak

    http-max-queued-requests=10

    # Observability
    # If the server should expose healthcheck endpoints.
    #health-enabled=true
    # If the server should expose metrics endpoints.
    #metrics-enabled=true

    # HTTP
    # The file path to a server certificate or certificate chain in PEM format.
    #https-certificate-file=\${kc.home.dir}conf/server.crt.pem
    # The file path to a private key in PEM format.
    #https-certificate-key-file=\${kc.home.dir}conf/server.key.pem
    # The proxy address forwarding mode if the server is behind a reverse proxy.
    #proxy=reencrypt

    # Do not attach route to cookies and rely on the session affinity capabilities from reverse proxy
    #spi-sticky-session-encoder-infinispan-should-attach-route=false

    # Hostname for the Keycloak server.
    # hostname=keycloak.mksybr.com
    # hostname-path=/keycloak
    # http-relative-path=/keycloak
    hostname-url=https://keycloak.mksybr.com:443/keycloak
    hostname-admin-url=https://keycloak.mksybr.com:443/keycloak
    proxy=edge

    quarkus.transaction-manager.enable-recovery=true

kind: ConfigMap
metadata:
  name: keycloak-config
  namespace: keycloak
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: keycloak
  name: keycloak
  namespace: keycloak
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: keycloak
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: keycloak
    spec:
      initContainers:
      - name: setup-keycloak-database
        args:
        - psql
        - postgres://postgres:$(POSTGRES_SUPERUSER_PASSWORD)@postgres-cluster
        - -c
        - |-
          CREATE DATABASE keycloak;
          CREATE USER keycloak WITH PASSWORD '$(POSTGRES_KEYCLOAK_PASSWORD)' CREATEDB;
          GRANT ALL on schema public TO keycloak;
        image: ongres/postgres-util
        resources: {}
        env:
        - name: POSTGRES_SUPERUSER_PASSWORD
          valueFrom: 
            secretKeyRef:
              name: postgres-cluster 
              key: superuser-password
        - name: POSTGRES_KEYCLOAK_PASSWORD
          valueFrom: 
            secretKeyRef:
              name:  postgres-keycloak-user
              key: password
      containers:
      - args:
        - --verbose
        - start
        env:
        - name: KEYCLOAK_ADMIN
          value: admin
        - name: KEYCLOAK_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: keycloak-admin-user
              key: password
        - name: KC_PROXY
          value: edge
        image: quay.io/keycloak/keycloak:23.0.4
        imagePullPolicy: IfNotPresent
        name: keycloak
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /realms/master
            port: 8080
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /opt/keycloak/conf/keycloak.conf
          name: keycloak-config-file
          readOnly: true
          subPath: keycloak.conf
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          name: keycloak-config
        name: keycloak-config-file
      - name: keycloak-realm-file
        secret:
          defaultMode: 420
          secretName: keycloak-realm
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: keycloak
  namespace: keycloak
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
    - hosts:
        - keycloak.mksybr.com
    secretName: letsencrypt-prod
  rules:
    - host: keycloak.mksybr.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: keycloak
                port:
                  number: 8080
---
