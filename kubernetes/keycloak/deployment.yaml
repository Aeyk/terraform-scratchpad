kind: Deployment
metadata:
  labels:
    app: keycloak
  name: keycloak
  namespace: keycloak
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: keycloak
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: keycloak
    spec:
      initContainers:
      - name: setup-keycloak-database
        args:
        - psql
        - postgres://postgres:$(POSTGRES_SUPERUSER_PASSWORD)@postgres-cluster
        - -c
        - |-
          CREATE DATABASE keycloak;
          CREATE USER keycloak WITH PASSWORD '$(POSTGRES_KEYCLOAK_PASSWORD)' CREATEDB;
          GRANT ALL on schema public TO keycloak;
        image: ongres/postgres-util
        resources: {}
        env:
        - name: POSTGRES_SUPERUSER_PASSWORD
          valueFrom: 
            secretKeyRef:
              name: postgres-cluster 
              key: superuser-password
        - name: POSTGRES_KEYCLOAK_PASSWORD
          valueFrom: 
            secretKeyRef:
              name:  postgres-keycloak-user
              key: password
      containers:
      - args:
        - --verbose
        - start
        env:
        - name: KEYCLOAK_ADMIN
          value: admin
        - name: KEYCLOAK_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: keycloak-admin-user
              key: password
        - name: KC_PROXY
          value: edge
        image: quay.io/keycloak/keycloak:23.0.4
        imagePullPolicy: IfNotPresent
        name: keycloak
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /realms/master
            port: 8080
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /opt/keycloak/conf/keycloak.conf
          name: keycloak-config-file
          readOnly: true
          subPath: keycloak.conf
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          name: keycloak-config
        name: keycloak-config-file
      - name: keycloak-realm-file
        secret:
          defaultMode: 420
          secretName: keycloak-realm
