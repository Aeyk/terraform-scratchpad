# gitea.yml
---
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    run: psql
  name: psql
spec:
  containers:
  - args:
    - psql
    - postgres://postgres:$(POSTGRES_SUPERUSER_PASSWORD)@postgres-cluster
    - -c
    - CREATE USER IF NOT EXISTS gitea WITH PASSWORD 'password' CREATEDB;
    image: ongres/postgres-util
    name: psql
    env:
    - name: POSTGRES_SUPERUSER_PASSWORD
      valueFrom: 
        secretKeyRef:
          name: postgres-cluster 
          key: superuser-password
    - name: POSTGRES_GITEA_PASSWORD
      valueFrom: 
        secretKeyRef:
          name: postgres-gitea-user
          key: password
    resources: {}
  dnsPolicy: ClusterFirst
  restartPolicy: Never
status: {}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: gitea
spec:
  storageClassName: "local-path"
  volumeName: gitea
  resources:
    requests:
      storage: 10Gi
  accessModes:
    - ReadWriteMany
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: gitea
  labels:
    type:
      local
spec:
  hostPath:
    path:
      /data/gitea
  capacity: 
    storage:
      10Gi
  storageClassName: "local-path"
  accessModes:
    - ReadWriteMany
---
apiVersion: v1
data:
  app.ini: |
    APP_NAME = Gitea
    RUN_USER = git
    RUN_MODE = prod
    WORK_PATH = /data/gitea/

    [security]
    INTERNAL_TOKEN     = $(kubectl get secrets gitea-internal-token -o jsonpath='{.data.password}' | base64 -d)
    INSTALL_LOCK       = true
    SECRET_KEY         = $(kubectl get secrets gitea-secret-key -o jsonpath='{.data.password}' | base64 -d)
    PASSWORD_HASH_ALGO = pbkdf2
    
    [database]
    DB_TYPE  = postgres
    HOST     = postgres-cluster:5432
    NAME     = giteadb
    # USER     = gitea
    USER     = postgres
    # PASSWD   = $(kubectl get secrets postgres-gitea-user -o jsonpath='{.data.password}' | base64 -d)
    PASSWD   = $(kubectl get secrets postgres-cluster -o jsonpath='{.data.superuser-password}' | base64 -d)
    SCHEMA   = 
    SSL_MODE = disable
    CHARSET  = utf8
    PATH     = /app/gitea/data/gitea.db
    LOG_SQL  = false

    [repository]
    ROOT = /data/gitea/gitea-repositories
    ENABLE_PUSH_CREATE_USER = true
    
    [server]
    SSH_DOMAIN       = gitea.mksybr.com
    DOMAIN           = gitea.mksybr.com
    HTTP_PORT        = 3000
    ROOT_URL         = https://gitea.mksybr.com/
    SSH_DOMAIN       = gitea.mksybr.com
    DISABLE_SSH      = false
    START_SSH_SERVER = true
    SSH_PORT         = 2222
    LFS_START_SERVER = true
    LFS_CONTENT_PATH = /data/gitea/lfs
    LFS_JWT_SECRET   = $(kubectl get secrets gitea-lfs-secret -o jsonpath='{.data.password}' | base64 -d)
    OFFLINE_MODE     = false

    [mailer]
    ENABLED = false

    [service]
    REGISTER_EMAIL_CONFIRM            = false
    ENABLE_NOTIFY_MAIL                = false
    DISABLE_REGISTRATION              = false
    ALLOW_ONLY_EXTERNAL_REGISTRATION  = false
    ENABLE_CAPTCHA                    = false
    REQUIRE_SIGNIN_VIEW               = true
    DEFAULT_KEEP_EMAIL_PRIVATE        = true
    DEFAULT_ALLOW_CREATE_ORGANIZATION = true
    DEFAULT_ENABLE_TIMETRACKING       = true
    NO_REPLY_ADDRESS                  = noreply.localhost

    [picture]
    DISABLE_GRAVATAR        = false
    ENABLE_FEDERATED_AVATAR = true

    [openid]
    ENABLE_OPENID_SIGNIN = true
    ENABLE_OPENID_SIGNUP = true

    [oauth2_client]
    ENABLE_AUTO_REGISTRATION = true
    USERNAME = email

    [session]
    PROVIDER = db # TODO(Malik): redis/redis-cluster

    [log]
    MODE      = console
    LEVEL     = info
    ROOT_PATH = /data/gitea/log
    ROUTER    = console

    [cors]
    ENABLED   = false

    [api]
    ENABLE_SWAGGER = false

    [metrics]
    ENABLED    = true
    ;; TOKEN      = create and get prometheus secret

    [cron]
    ENABLED      = true

    [cache]
    # ADAPTER    = redis # TODO(Malik): redis

kind: ConfigMap
metadata:
  name: gitea-config
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gitea
spec:
  selector:
    matchLabels:
      app: gitea
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: gitea
    spec:
      containers:
        - name: gitea
          image: gitea/gitea:1.15
          ports:
            - containerPort: 3000
              hostPort: 3001
              protocol: TCP
              name: http
          ports:
            - containerPort: 22
              hostPort: 2222
              protocol: TCP
              name: ssh
          volumeMounts:
          - mountPath: /data
            name: gitea
          - name: gitea-configmap
            mountPath: /data/gitea/conf/app.ini
            subPath: app.ini
      restartPolicy: Always
      volumes:
        - name: gitea
          persistentVolumeClaim:
            claimName: gitea
        - name: gitea-configmap
          configMap:
            name: gitea-configmap
            items:
              - key: app.ini
                path: app.ini
---
apiVersion: v1
kind: Service
metadata:
  name: gitea
  namespace: default
spec:
  ports:
  - name: https
    port: 3001
    protocol: TCP
    targetPort: 3000
  selector:
    app: gitea
  sessionAffinity: None
  type: NodePort
---
apiVersion: v1
kind: Service
metadata:
  name: gitea-ssh
  namespace: default
spec:
  ports:
  - name: ssh
    port: 2222
    protocol: TCP
    targetPort: 22
  selector:
    app: gitea
  sessionAffinity: None
  type: NodePort
---
